{"version":3,"sources":["file:///Users/takeda.naomichi/TestQuizSecond/assets/Script/Game/Manager/QuizManager.ts"],"names":["_decorator","Component","Button","GestureQuiz","QuizModalManager","ccclass","property","QuizManager","quizType","quizComponent","answerData","Instance","instance","start","startButton","node","on","EventType","CLICK","QuestionPhase","active","OnUpdate","AnswerPhase","SetQuizType","type","destroy","addComponent","Initialize","SetQuiz","GetChoicesModal","GetChoics","GetResultModal","SetInfo","GetQuizData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA2BC,MAAAA,M,OAAAA,M;;AACvCC,MAAAA,W,iBAAAA,W;;AAEAC,MAAAA,gB,iBAAAA,gB;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;6BAGjBO,W,WADZF,OAAO,CAAC,aAAD,C,UAaHC,QAAQ,CAACJ,MAAD,C,sCAbb,MACaK,WADb,SACiCN,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA,eAevCO,QAfuC,GAejB,MAfiB;AAAA,eAgBvCC,aAhBuC,GAgBP,IAhBO;AAAA,eAiBvCC,UAjBuC,GAiBf,IAjBe;AAAA;;AAIjB,eAARC,QAAQ,GAAiB;AACnC,cAAG,CAACJ,WAAW,CAACK,QAAhB,EAAyB;AACrBL,YAAAA,WAAW,CAACK,QAAZ,GAAuB,IAAIL,WAAJ,EAAvB;AACH;;AAED,iBAAOA,WAAW,CAACK,QAAnB;AACH;;AASDC,QAAAA,KAAK,GAAE;AACH,eAAKC,WAAL,CAAiBC,IAAjB,CAAsBC,EAAtB,CAAyBd,MAAM,CAACe,SAAP,CAAiBC,KAA1C,EAAiD,YAAU;AACvD,iBAAKC,aAAL;AACA,iBAAKL,WAAL,CAAiBC,IAAjB,CAAsBK,MAAtB,GAA+B,KAA/B;AACH,WAHD,EAGG,IAHH;AAIH;;AAEMC,QAAAA,QAAQ,GAAE;AACb,eAAKC,WAAL;AACH;;AAEMC,QAAAA,WAAW,CAACC,IAAD,EAAiB;AAE/B,cAAG,KAAKf,aAAR,EAAsB;AAClB,iBAAKA,aAAL,CAAmBgB,OAAnB;AACH;;AAED,cAAGD,IAAI,KAAK,SAAZ,EAAsB;AAClB,iBAAKf,aAAL,GAAqB,KAAKiB,YAAL;AAAA;AAAA,2CAArB;AACH;;AACD,cAAGF,IAAI,KAAK,KAAZ,EAAkB,CACjB;;AACD,cAAGA,IAAI,KAAK,MAAZ,EAAmB,CAClB;AACJ,SA3CsC,CA6CvC;;;AACQL,QAAAA,aAAa,GAAE;AACnB,eAAKV,aAAL,CAAmBkB,UAAnB;AACA,eAAKlB,aAAL,CAAmBmB,OAAnB;AACH,SAjDsC,CAmDvC;;;AACAN,QAAAA,WAAW,GAAE;AACT,cAAG;AAAA;AAAA,oDAAiBX,QAAjB,GAA4BkB,eAA5B,GAA8CC,SAA9C,KAA4D,CAAC,CAAhE,EAAkE;AAC9D;AAAA;AAAA,sDAAiBnB,QAAjB,GAA4BoB,cAA5B,GAA6CC,OAA7C,CAAqD;AAAA;AAAA,sDAAiBrB,QAAjB,GAA4BkB,eAA5B,GAA8CC,SAA9C,EAArD,EAA+G,KAAKrB,aAAL,CAAmBwB,WAAnB,EAA/G;AACH;AACJ;;AAxDsC,O,UAExBrB,Q;;;;;iBAWQ,I","sourcesContent":["import { _decorator, Component, Node, profiler, Button, InstancedBuffer } from 'cc';\nimport { GestureQuiz } from '../Quiz/GestureQuiz';\nimport { QuizComponent, QuizData, QuizType } from '../Quiz/QuizComponent';\nimport { QuizModalManager } from './QuizModalManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('QuizManager')\nexport class QuizManager extends Component {\n\n    private static instance : QuizManager;\n\n    public static Instance() : QuizManager {\n        if(!QuizManager.instance){\n            QuizManager.instance = new QuizManager();\n        }\n\n        return QuizManager.instance;\n    }\n\n    @property(Button)\n    startButton : Button = null;\n\n    quizType : QuizType = 'None';\n    quizComponent : QuizComponent = null;\n    answerData : QuizData = null;\n\n    start(){\n        this.startButton.node.on(Button.EventType.CLICK, function(){\n            this.QuestionPhase();\n            this.startButton.node.active = false;\n        }, this);\n    }\n\n    public OnUpdate(){\n        this.AnswerPhase();\n    }\n\n    public SetQuizType(type : QuizType){\n        \n        if(this.quizComponent){\n            this.quizComponent.destroy();\n        }\n\n        if(type === 'Gesture'){\n            this.quizComponent = this.addComponent(GestureQuiz);\n        }\n        if(type === 'Act'){\n        }\n        if(type === 'Quiz'){\n        }\n    }\n\n    // 出題\n    private QuestionPhase(){\n        this.quizComponent.Initialize();\n        this.quizComponent.SetQuiz();\n    }\n\n    // \n    AnswerPhase(){\n        if(QuizModalManager.Instance().GetChoicesModal().GetChoics() > -1){\n            QuizModalManager.Instance().GetResultModal().SetInfo(QuizModalManager.Instance().GetChoicesModal().GetChoics(),this.quizComponent.GetQuizData());\n        }\n    }\n}\n\n"]}