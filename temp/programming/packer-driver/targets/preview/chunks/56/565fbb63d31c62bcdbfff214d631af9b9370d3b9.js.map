{"version":3,"sources":["file:///Users/takeda.naomichi/TestQuizSecond/assets/Script/Game/Quiz/Data/QuizDataBase.ts"],"names":["_decorator","Component","GestureDataBase","ccclass","property","QuizDataBase","dataList","Array","Instance","instance","start","GetGestureDataBase","gesture","Add","data","push","GetData","type","index","mType","mIndex","GetDataList","tempList"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAEZC,MAAAA,e,iBAAAA,e;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;8BAGjBK,Y,WADZF,OAAO,CAAC,cAAD,C,UAcHC,QAAQ;AAAA;AAAA,6C,sCAdb,MACaC,YADb,SACkCJ,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA,eAgBxCK,QAhBwC,GAgBX,IAAIC,KAAJ,EAhBW;AAAA;;AAIlB,eAARC,QAAQ,GAAkB;AACpC,cAAG,CAACH,YAAY,CAACI,QAAjB,EAA0B;AACtBJ,YAAAA,YAAY,CAACI,QAAb,GAAwB,IAAIJ,YAAJ,EAAxB;AACH;;AAED,iBAAOA,YAAY,CAACI,QAApB;AACH;;AAQDC,QAAAA,KAAK,GAAG;AACJL,UAAAA,YAAY,CAACI,QAAb,GAAwB,IAAxB;AACH;;AAEME,QAAAA,kBAAkB,GAAoB;AACzC,iBAAO,KAAKC,OAAZ;AACH,SAxBuC,CA0BxC;;;AACOC,QAAAA,GAAG,CAACC,IAAD,EAAiB;AACvB,eAAKR,QAAL,CAAcS,IAAd,CAAmBD,IAAnB;AACH,SA7BuC,CA+BxC;;;AACOE,QAAAA,OAAO,CAACC,IAAD,EAAkBC,KAAlB,EAA4C;AACtD,eAAI,IAAMJ,IAAV,IAAkB,KAAKR,QAAvB,EAAgC;AAC5B,gBAAGQ,IAAI,CAACK,KAAL,KAAeF,IAAf,IAAuBH,IAAI,CAACM,MAAL,KAAgBF,KAA1C,EAAgD;AAC5C,qBAAOJ,IAAP;AACH;AACJ;;AACD,iBAAO,IAAP;AACH,SAvCuC,CAyCxC;;;AACOO,QAAAA,WAAW,CAAIJ,IAAJ,EAA0B;AACxC,cAAIK,QAAQ,GAAG,IAAIf,KAAJ,EAAf;;AAEA,eAAI,IAAMO,IAAV,IAAkB,KAAKR,QAAvB,EAAgC;AAC5B,gBAAGQ,IAAI,CAACK,KAAL,KAAeF,IAAlB,EAAuB;AACnBK,cAAAA,QAAQ,CAACP,IAAT,CAAeD,IAAf;AACH;AACJ;;AAED,iBAAOQ,QAAP;AACH;;AApDuC,O,UAEzBb,Q;;;;;iBAYa,I","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nimport { QuizType } from '../QuizComponent';\nimport { GestureDataBase } from './GestureDataBase';\nimport { GestureData, QuizData } from './QuizData';\nconst { ccclass, property } = _decorator;\n\n@ccclass('QuizDataBase')\nexport class QuizDataBase extends Component {\n\n    private static instance : QuizDataBase;\n    \n    public static Instance() : QuizDataBase {\n        if(!QuizDataBase.instance){\n            QuizDataBase.instance = new QuizDataBase();\n        }\n\n        return QuizDataBase.instance;\n    }\n\n\n    @property(GestureDataBase)\n    gesture : GestureDataBase = null;\n\n    dataList : Array<QuizData> = new Array<QuizData>();\n\n    start() {\n        QuizDataBase.instance = this;\n    }\n\n    public GetGestureDataBase() : GestureDataBase{\n        return this.gesture;\n    }\n\n    // 要素の追加\n    public Add(data : QuizData){\n        this.dataList.push(data);\n    }\n\n    // リスト内の要素を取得\n    public GetData(type : QuizType, index : number) : QuizData{\n        for(const data of this.dataList){\n            if(data.mType === type && data.mIndex === index){\n                return data;\n            }\n        }\n        return null;\n    }\n\n    // リストごと取得\n    public GetDataList<T>(type : QuizType) : T[]{\n        var tempList = new Array<T>;\n\n        for(const data of this.dataList){\n            if(data.mType === type){\n                tempList.push((data as T));\n            }\n        }\n\n        return tempList;\n    }\n}\n\n"]}