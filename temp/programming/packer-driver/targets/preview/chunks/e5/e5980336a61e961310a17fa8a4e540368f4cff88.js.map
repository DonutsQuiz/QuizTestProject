{"version":3,"sources":["file:///Users/takeda.naomichi/Desktop/QuizTestProject/assets/Script/Game/Manager/QuizManager.ts"],"names":["_decorator","Component","Button","GestureQuiz","QuizModalManager","ccclass","property","QuizManager","Number","quizType","quizComponent","answerData","Instance","instance","start","SetQuizType","startButton","node","on","EventType","CLICK","QuestionPhase","active","OnUpdate","GetChoicesModal","isNext","mNumber","raundMax","ChangeModal","SetQuiz","GetResultModal","type","destroy","addComponent","Initialize","AnswerPhase","GetChoics","SetInfo","GetQuizData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA2BC,MAAAA,M,OAAAA,M;;AAEvCC,MAAAA,W,iBAAAA,W;;AAEAC,MAAAA,gB,iBAAAA,gB;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;6BAGjBO,W,WADZF,OAAO,CAAC,aAAD,C,UAaHC,QAAQ,CAACJ,MAAD,C,UAERI,QAAQ,CAACE,MAAD,C,sCAfb,MACaD,WADb,SACiCN,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAiBvCQ,QAjBuC,GAiBjB,MAjBiB;AAAA,eAkBvCC,aAlBuC,GAkBP,IAlBO;AAAA,eAmBvCC,UAnBuC,GAmBf,IAnBe;AAAA;;AAIjB,eAARC,QAAQ,GAAiB;AACnC,cAAG,CAACL,WAAW,CAACM,QAAhB,EAAyB;AACrBN,YAAAA,WAAW,CAACM,QAAZ,GAAuB,IAAIN,WAAJ,EAAvB;AACH;;AAED,iBAAOA,WAAW,CAACM,QAAnB;AACH;;AAWDC,QAAAA,KAAK,GAAE;AACHP,UAAAA,WAAW,CAACM,QAAZ,GAAuB,IAAvB;AAEA,eAAKE,WAAL,CAAiB,SAAjB;AAEA,eAAKC,WAAL,CAAiBC,IAAjB,CAAsBC,EAAtB,CAAyBhB,MAAM,CAACiB,SAAP,CAAiBC,KAA1C,EAAiD,YAAU;AACvD,iBAAKC,aAAL;AACA,iBAAKL,WAAL,CAAiBC,IAAjB,CAAsBK,MAAtB,GAA+B,KAA/B;AACH,WAHD,EAGG,IAHH;AAIH;;AAEMC,QAAAA,QAAQ,GAAE;AACb;AAEA;AACA,cAAG;AAAA;AAAA,oDAAiBX,QAAjB,GAA4BY,eAA5B,GAA8CC,MAAjD,EAAwD;AACpD,gBAAG,KAAKf,aAAL,CAAmBgB,OAAnB,IAA8B,KAAKC,QAAtC,EAA+C;AAC3C;AAAA;AAAA,wDAAiBf,QAAjB,GAA4BgB,WAA5B,CAAwC,SAAxC;AACH,aAFD,MAGI;AACA,mBAAKlB,aAAL,CAAmBmB,OAAnB;AACH;;AACD;AAAA;AAAA,sDAAiBjB,QAAjB,GAA4BkB,cAA5B,GAA6CL,MAA7C,GAAsD,KAAtD;AACH;AACJ;;AAEMV,QAAAA,WAAW,CAACgB,IAAD,EAAiB;AAE/B,cAAG,KAAKrB,aAAR,EAAsB;AAClB,iBAAKA,aAAL,CAAmBsB,OAAnB;AACH;;AAED,cAAGD,IAAI,KAAK,SAAZ,EAAsB;AAClB,iBAAKrB,aAAL,GAAqB,KAAKuB,YAAL;AAAA;AAAA,2CAArB;AACH;;AACD,cAAGF,IAAI,KAAK,KAAZ,EAAkB,CACjB;;AACD,cAAGA,IAAI,KAAK,MAAZ,EAAmB,CAClB;AACJ,SA5DsC,CA8DvC;;;AACQV,QAAAA,aAAa,GAAE;AACnB,eAAKX,aAAL,CAAmBwB,UAAnB;AACA,eAAKxB,aAAL,CAAmBmB,OAAnB;AACH,SAlEsC,CAoEvC;;;AACAM,QAAAA,WAAW,GAAE;AACT,cAAG;AAAA;AAAA,oDAAiBvB,QAAjB,GAA4BY,eAA5B,GAA8CY,SAA9C,KAA4D,CAAC,CAAhE,EAAkE;AAC9D;AAAA;AAAA,sDAAiBxB,QAAjB,GAA4BkB,cAA5B,GAA6CO,OAA7C,CAAqD;AAAA;AAAA,sDAAiBzB,QAAjB,GAA4BY,eAA5B,GAA8CY,SAA9C,EAArD,EAA+G,KAAK1B,aAAL,CAAmB4B,WAAnB,EAA/G;AACH;AACJ;;AAzEsC,O,UAExBzB,Q;;;;;iBAWQ,I;;;;;;;iBAEH,C","sourcesContent":["import { _decorator, Component, Node, profiler, Button, InstancedBuffer } from 'cc';\nimport { QuizData } from '../Quiz/Data/QuizData';\nimport { GestureQuiz } from '../Quiz/GestureQuiz';\nimport { QuizComponent, QuizType } from '../Quiz/QuizComponent';\nimport { QuizModalManager } from './QuizModalManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('QuizManager')\nexport class QuizManager extends Component {\n\n    private static instance : QuizManager;\n\n    public static Instance() : QuizManager {\n        if(!QuizManager.instance){\n            QuizManager.instance = new QuizManager();\n        }\n\n        return QuizManager.instance;\n    }\n\n    @property(Button)\n    startButton : Button = null;\n    @property(Number)\n    raundMax : number = 0;\n\n    quizType : QuizType = 'None';\n    quizComponent : QuizComponent = null;\n    answerData : QuizData = null;\n\n    start(){\n        QuizManager.instance = this;\n        \n        this.SetQuizType('Gesture');\n\n        this.startButton.node.on(Button.EventType.CLICK, function(){\n            this.QuestionPhase();\n            this.startButton.node.active = false;\n        }, this);\n    }\n\n    public OnUpdate(){\n        //this.AnswerPhase();\n\n        // 全問題が終了したら総合結果に移行する\n        if(QuizModalManager.Instance().GetChoicesModal().isNext){\n            if(this.quizComponent.mNumber >= this.raundMax){\n                QuizModalManager.Instance().ChangeModal('Overall');\n            }\n            else{\n                this.quizComponent.SetQuiz();\n            }\n            QuizModalManager.Instance().GetResultModal().isNext = false;\n        }\n    }\n\n    public SetQuizType(type : QuizType){\n        \n        if(this.quizComponent){\n            this.quizComponent.destroy();\n        }\n\n        if(type === 'Gesture'){\n            this.quizComponent = this.addComponent(GestureQuiz);\n        }\n        if(type === 'Act'){\n        }\n        if(type === 'Quiz'){\n        }\n    }\n\n    // 出題\n    private QuestionPhase(){\n        this.quizComponent.Initialize();\n        this.quizComponent.SetQuiz();\n    }\n\n    // \n    AnswerPhase(){\n        if(QuizModalManager.Instance().GetChoicesModal().GetChoics() > -1){\n            QuizModalManager.Instance().GetResultModal().SetInfo(QuizModalManager.Instance().GetChoicesModal().GetChoics(),this.quizComponent.GetQuizData());\n        }\n    }\n}\n\n"]}