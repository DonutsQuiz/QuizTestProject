{"version":3,"sources":["file:///Users/takeda.naomichi/TestQuizSecond/assets/Script/Game/Manager/QuizManager.ts"],"names":["_decorator","Component","Button","ChoicesModal","QuestionModal","ResultModal","QuizComponent","ccclass","property","QuizManager","answerData","Instance","instance","start","startButton","node","on","EventType","CLICK","QuestionPhase","active","OnUpdate","AnswerPhase","quizComponent","Initialize","SetQuiz","choicesModal","GetChoics","resultModal","SetInfo","GetQuizData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA2BC,MAAAA,M,OAAAA,M;;AACvCC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,a,iBAAAA,a;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;6BAGjBS,W,WADZF,OAAO,CAAC,aAAD,C,UAcHC,QAAQ;AAAA;AAAA,yC,UAERA,QAAQ;AAAA;AAAA,uC,UAERA,QAAQ;AAAA;AAAA,qC,UAERA,QAAQ;AAAA;AAAA,yC,UAGRA,QAAQ,CAACN,MAAD,C,sCAvBb,MACaO,WADb,SACiCR,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAyBvCS,UAzBuC,GAyBf,IAzBe;AAAA;;AAKjB,eAARC,QAAQ,GAAiB;AACnC,cAAG,CAACF,WAAW,CAACG,QAAhB,EAAyB;AACrBH,YAAAA,WAAW,CAACG,QAAZ,GAAuB,IAAIH,WAAJ,EAAvB;AACH;;AAED,iBAAOA,WAAW,CAACG,QAAnB;AACH;;AAgBDC,QAAAA,KAAK,GAAE;AACH,eAAKC,WAAL,CAAiBC,IAAjB,CAAsBC,EAAtB,CAAyBd,MAAM,CAACe,SAAP,CAAiBC,KAA1C,EAAiD,YAAU;AACvD,iBAAKC,aAAL;AACA,iBAAKL,WAAL,CAAiBC,IAAjB,CAAsBK,MAAtB,GAA+B,KAA/B;AACH,WAHD,EAGG,IAHH;AAIH;;AAEMC,QAAAA,QAAQ,GAAE;AACb,eAAKC,WAAL;AACH,SApCsC,CAsCvC;;;AACQH,QAAAA,aAAa,GAAE;AACnB,eAAKI,aAAL,CAAmBC,UAAnB;AACA,eAAKD,aAAL,CAAmBE,OAAnB;AACH,SA1CsC,CA4CvC;;;AACAH,QAAAA,WAAW,GAAE;AACT,cAAG,KAAKI,YAAL,CAAkBC,SAAlB,KAAgC,CAAC,CAApC,EAAsC;AAClC,iBAAKC,WAAL,CAAiBC,OAAjB,CAAyB,KAAKH,YAAL,CAAkBC,SAAlB,EAAzB,EAAuD,KAAKJ,aAAL,CAAmBO,WAAnB,EAAvD;AACH;AACJ,SAjDsC,CAuDvC;AACA;AACA;;;AAzDuC,O,UAExBlB,Q;;;;;iBAYiB,I;;;;;;;iBAEF,I;;;;;;;iBAEF,I;;;;;;;iBAEI,I;;;;;;;iBAGT,I","sourcesContent":["import { _decorator, Component, Node, profiler, Button } from 'cc';\nimport { ChoicesModal } from './Modal/ChoicesModal';\nimport { QuestionModal } from './Modal/QuestionModal';\nimport { ResultModal } from './Modal/ResultModal';\nimport { QuizComponent, QuizData } from './QuizComponent';\nconst { ccclass, property } = _decorator;\n\n@ccclass('QuizManager')\nexport class QuizManager extends Component {\n\n    private static instance : QuizManager;\n    \n\n    public static Instance() : QuizManager {\n        if(!QuizManager.instance){\n            QuizManager.instance = new QuizManager();\n        }\n\n        return QuizManager.instance;\n    }\n\n    @property(QuestionModal)\n    questionModal : QuestionModal = null;\n    @property(ChoicesModal)\n    choicesModal : ChoicesModal = null;\n    @property(ResultModal)\n    resultModal : ResultModal = null;\n    @property(QuizComponent)\n    quizComponent : QuizComponent = null;\n\n    @property(Button)\n    startButton : Button = null;\n\n    answerData : QuizData = null;\n\n    start(){\n        this.startButton.node.on(Button.EventType.CLICK, function(){\n            this.QuestionPhase();\n            this.startButton.node.active = false;\n        }, this);\n    }\n\n    public OnUpdate(){\n        this.AnswerPhase();\n    }\n\n    // 出題\n    private QuestionPhase(){\n        this.quizComponent.Initialize();\n        this.quizComponent.SetQuiz();\n    }\n\n    // \n    AnswerPhase(){\n        if(this.choicesModal.GetChoics() > -1){\n            this.resultModal.SetInfo(this.choicesModal.GetChoics(),this.quizComponent.GetQuizData());\n        }\n    }\n\n\n\n\n\n    // 出題\n    // 回答\n    // 答え合わせ\n}\n\n"]}