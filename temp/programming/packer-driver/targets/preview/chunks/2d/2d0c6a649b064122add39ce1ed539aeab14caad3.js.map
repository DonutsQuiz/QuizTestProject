{"version":3,"sources":["file:///Users/takeda.naomichi/Desktop/QuizTestProject/assets/Script/Game/Quiz/Data/QuizDataBase.ts"],"names":["_decorator","Component","SpriteFrame","GestureData","ccclass","property","QuizDataBase","dataList","Array","Instance","instance","start","GestureDataInitialize","Add","data","push","GetData","type","index","mType","mIndex","GetDataList","tempList","i","mAnswer","mSprite","sprite"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;;AAE7BC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;8BAGjBM,Y,WADZF,OAAO,CAAC,cAAD,C,UAcHC,QAAQ,CAACH,WAAD,C,sCAdb,MACaI,YADb,SACkCL,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA,eAgBxCM,QAhBwC,GAgBX,IAAIC,KAAJ,EAhBW;AAAA;;AAIlB,eAARC,QAAQ,GAAkB;AACpC,cAAG,CAACH,YAAY,CAACI,QAAjB,EAA0B;AACtBJ,YAAAA,YAAY,CAACI,QAAb,GAAwB,IAAIJ,YAAJ,EAAxB;AACH;;AAED,iBAAOA,YAAY,CAACI,QAApB;AACH,SAVuC,CAYxC;;;AAMAC,QAAAA,KAAK,GAAG;AACJL,UAAAA,YAAY,CAACI,QAAb,GAAwB,IAAxB;AAEA,eAAKE,qBAAL;AACH,SAtBuC,CAwBxC;;;AACOC,QAAAA,GAAG,CAACC,IAAD,EAAiB;AACvB,eAAKP,QAAL,CAAcQ,IAAd,CAAmBD,IAAnB;AACH,SA3BuC,CA6BxC;;;AACOE,QAAAA,OAAO,CAAIC,IAAJ,EAAqBC,KAArB,EAAwC;AAClD,eAAI,IAAMJ,IAAV,IAAkB,KAAKP,QAAvB,EAAgC;AAC5B,gBAAGO,IAAI,CAACK,KAAL,KAAeF,IAAf,IAAuBH,IAAI,CAACM,MAAL,KAAgBF,KAA1C,EAAgD;AAC5C,qBAAQJ,IAAR;AACH;AACJ;;AACD,iBAAO,IAAP;AACH,SArCuC,CAuCxC;;;AACOO,QAAAA,WAAW,CAAIJ,IAAJ,EAA0B;AACxC,cAAIK,QAAQ,GAAG,IAAId,KAAJ,EAAf;;AAEA,eAAI,IAAMM,IAAV,IAAkB,KAAKP,QAAvB,EAAgC;AAC5B,gBAAGO,IAAI,CAACK,KAAL,KAAeF,IAAlB,EAAuB;AACnBK,cAAAA,QAAQ,CAACP,IAAT,CAAeD,IAAf;AACH;AACJ;;AAED,iBAAOQ,QAAP;AACH,SAlDuC,CAoDxC;;;AACQV,QAAAA,qBAAqB,GAAE;AAC3B,eAAI,IAAIW,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,gBAAIT,IAAkB,GAAG;AAAA;AAAA,6CAAzB;AACAA,YAAAA,IAAI,CAACM,MAAL,GAAcG,CAAd;AACAT,YAAAA,IAAI,CAACU,OAAL,GAAeD,CAAf;AACAT,YAAAA,IAAI,CAACW,OAAL,GAAe,KAAKC,MAAL,CAAYH,CAAZ,CAAf;AACA,iBAAKV,GAAL,CAASC,IAAT;AACH;AACJ;;AA7DuC,O,UAEzBJ,Q;;;;;iBAYeF,KAAK,E","sourcesContent":["import { _decorator, Component, Node, SpriteFrame, Sprite } from 'cc';\nimport { QuizType } from '../QuizComponent';\nimport { GestureData, QuizData } from './QuizData';\nconst { ccclass, property } = _decorator;\n\n@ccclass('QuizDataBase')\nexport class QuizDataBase extends Component {\n\n    private static instance : QuizDataBase;\n    \n    public static Instance() : QuizDataBase {\n        if(!QuizDataBase.instance){\n            QuizDataBase.instance = new QuizDataBase();\n        }\n\n        return QuizDataBase.instance;\n    }\n\n    // お試し用\n    @property(SpriteFrame)\n    sprite : Array<SpriteFrame> = Array<SpriteFrame>();\n\n    dataList : Array<QuizData> = new Array<QuizData>();\n\n    start() {\n        QuizDataBase.instance = this;\n\n        this.GestureDataInitialize();\n    }\n\n    // 要素の追加\n    public Add(data : QuizData){\n        this.dataList.push(data);\n    }\n\n    // リスト内の要素を取得\n    public GetData<T>(type : QuizType, index : number) : T{\n        for(const data of this.dataList){\n            if(data.mType === type && data.mIndex === index){\n                return (data as T);\n            }\n        }\n        return null;\n    }\n\n    // リストごと取得\n    public GetDataList<T>(type : QuizType) : T[]{\n        var tempList = new Array<T>;\n\n        for(const data of this.dataList){\n            if(data.mType === type){\n                tempList.push((data as T));\n            }\n        }\n\n        return tempList;\n    }\n\n    // ジェスチャーデータの初期化(お試し)\n    private GestureDataInitialize(){\n        for(var i = 0; i < 6; i++){\n            var data : GestureData = new GestureData;\n            data.mIndex = i;\n            data.mAnswer = i;\n            data.mSprite = this.sprite[i];\n            this.Add(data);\n        }\n    }\n}\n\n"]}