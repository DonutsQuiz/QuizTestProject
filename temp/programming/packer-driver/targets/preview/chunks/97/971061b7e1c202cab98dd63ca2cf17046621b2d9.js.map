{"version":3,"sources":["file:///Users/takeda.naomichi/Desktop/QuizTestProject/assets/Script/Game/Modal/ChoicesModal.ts"],"names":["_decorator","Component","Node","Button","Label","Sprite","Vec3","ChipControll","Timer","GameManager","QuizModalManager","BetModal","ccclass","property","ChoicesModal","choiceNumber","tempNumber","debugClientMode","start","timer","SetTimeLimit","Instance","GetGameInfo","thinkTime","questionLabel","string","qSentence","buttonList","node","on","EventType","CLICK","Choice","nextButton","Next","active","coinsLabel","coins","toString","betModal","liverAnswerFrameSprite","position","qAnswer","update","deltaTime","DebugModalUpdate","Display","GetTimeLeft","GetIsDecide","DecideChoice","index","SetChoices","text","sprite","labelList","spriteList","spriteFrame","GetChoics","SetQuestion","sent","Initialize","GetClientMode","liverNode","userNode","odds","oddsLabelList","userAnswerFrameSprite","chipAnim","Play","ChangeModal","GetResultModal","SetCoinLabel","DontClickButton","Array"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Button, Label, SpriteFrame, Sprite, Vec3 } from 'cc';\nimport { ChipControll } from '../../Chip/ChipControll';\nimport { Timer } from '../../UI/Timer';\nimport { ClientMode, GameManager } from '../Manager/GameManager';\nimport { QuizModalManager } from '../Manager/QuizModalManager';\nimport { BetModal } from './BetModal';\nimport { ResultModal } from './ResultModal';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ChoicesModal')\nexport class ChoicesModal extends Component {\n\n    @property(Node) // ライバー側\n    private liverNode : Node = null;\n    @property(Node) // ユーザー側\n    private userNode : Node = null;\n    @property(Button) // 選択肢（ボタン）\n    buttonList : Array<Button> = new Array<Button>();\n    @property(Label) // 選択肢（文字）\n    labelList : Array<Label> = new Array<Label>();\n    @property(Sprite)// 選択肢（画像）\n    spriteList : Array<Sprite> = new Array<Sprite>();\n    @property(Label)// オッズ\n    private oddsLabelList : Array<Label> = new Array<Label>();\n    @property(Label)// 総ベット量\n    private betLabelList : Array<Label> = new Array<Label>();\n    @property(Label)// 問題文\n    private questionLabel : Label = null;\n    @property(Label)// 所持コイン\n    private coinsLabel : Label = null;\n    @property(BetModal)// ベットモーダル\n    private betModal : BetModal = null; \n    @property(Button)// 次に進むボタン\n    private nextButton : Button = null;\n    @property(Node)// 答えの枠\n    private liverAnswerFrameSprite : Node = null;\n    @property(Node)// 選択した枠\n    private userAnswerFrameSprite : Node = null;\n\n    @property(Timer)\n    timer : Timer = null;\n    @property(ChipControll)\n    chipAnim : ChipControll = null;\n\n    choiceNumber : number = -1;\n    private tempNumber : number = 0;\n    private debugClientMode : ClientMode = 'Liver';\n\n    start() {\n        this.timer.SetTimeLimit(GameManager.Instance().GetGameInfo().thinkTime);   // タイマーのセット\n        this.questionLabel.string = GameManager.Instance().GetGameInfo().qSentence;\n        this.buttonList[0].node.on(Button.EventType.CLICK, function(){this.Choice(0);}, this);\n        this.buttonList[1].node.on(Button.EventType.CLICK, function(){this.Choice(1);}, this);\n        this.buttonList[2].node.on(Button.EventType.CLICK, function(){this.Choice(2);}, this);\n        this.buttonList[3].node.on(Button.EventType.CLICK, function(){this.Choice(3);}, this);\n        this.buttonList[4].node.on(Button.EventType.CLICK, function(){this.Choice(4);}, this);\n        this.buttonList[5].node.on(Button.EventType.CLICK, function(){this.Choice(5);}, this);\n        this.nextButton.node.on( Button.EventType.CLICK, this.Next, this);\n        this.nextButton.node.active = false;\n        this.coinsLabel.string = GameManager.Instance().GetGameInfo().coins.toString();\n        this.betModal.node.active = false;\n        this.liverAnswerFrameSprite.position = new Vec3(this.buttonList[GameManager.Instance().GetGameInfo().qAnswer].node.position);\n    }\n\n    update(deltaTime: number) {\n        this.DebugModalUpdate();\n\n        this.timer.Display();\n\n        if(this.timer.GetTimeLeft() <= 0){\n            this.nextButton.node.active = true;\n        }\n\n        if(this.betModal.GetIsDecide()){\n            this.DecideChoice();\n        }\n    }\n\n    // クリックした時\n    private Choice(index : number) {\n        this.betModal.node.active = true;    // ベットモーダルを表示\n        this.tempNumber = index;      // 選択した番号\n    }\n\n    // 選択肢を設定\n    public SetChoices(index : number, text : string, sprite : SpriteFrame){\n        this.labelList[index].string = text;\n        this.spriteList[index].spriteFrame = sprite;\n    }\n\n    \n    public GetChoics() : number{\n        return this.choiceNumber;\n    }\n\n    public SetQuestion(sent : string){\n        this.questionLabel.string = sent;\n    }\n\n    private Initialize(){\n        if(GameManager.Instance().GetClientMode() === 'Liver'){\n            this.liverNode.active = true;\n            this.userNode.active = false;\n            for(const odds of this.oddsLabelList){\n                odds.node.active = true;\n            }\n            this.liverAnswerFrameSprite.active = true;\n            this.userAnswerFrameSprite.active = false;\n            this.debugClientMode = 'Liver';\n\n        }\n        else{\n            this.liverNode.active = false;\n            this.userNode.active = true;\n            for(const odds of this.oddsLabelList){\n                odds.node.active = false;\n            }\n            this.liverAnswerFrameSprite.active = false;\n            this.userAnswerFrameSprite.active = false;\n            this.debugClientMode = 'User';\n        }\n    }\n\n    private DecideChoice(){\n        this.choiceNumber = this.tempNumber;\n        this.userAnswerFrameSprite.position = new Vec3(this.buttonList[this.choiceNumber].node.position);\n        this.chipAnim.Play();\n    }\n\n    private Next(){\n        QuizModalManager.Instance().ChangeModal('Result');\n        QuizModalManager.Instance().GetResultModal().SetCoinLabel(\"400\");\n    }\n\n    private DontClickButton(){\n        this.liverNode.active = true;\n        this.userNode.active = false;\n        for(const odds of this.oddsLabelList){\n            odds.node.active = true;\n        }\n        this.debugClientMode = 'Liver';\n    }\n\n    private DebugModalUpdate(){\n        if(GameManager.Instance().GetClientMode() != this.debugClientMode){\n            this.Initialize();\n        }\n    }\n}\n\n"]}