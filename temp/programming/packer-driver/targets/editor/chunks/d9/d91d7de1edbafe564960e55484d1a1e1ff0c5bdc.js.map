{"version":3,"sources":["file:///Users/takeda.naomichi/Desktop/QuizTestProject/assets/Script/Game/Manager/GameManager.ts"],"names":["_decorator","Component","Button","Label","QuizManager","ccclass","property","ClientMode","Liver","User","GameManager","clientMode","Instance","instance","start","clientButton","node","on","EventType","CLICK","ChangeClientMode","update","deltaTime","quizManager","OnUpdate","clientLabel","string","GetClientMode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;;AACrCC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;AAExBO,MAAAA,U,GAAa;AACfC,QAAAA,KAAK,EAAG,OADO;AAEfC,QAAAA,IAAI,EAAG;AAFQ,O;;6BAQNC,W,WADZL,OAAO,CAAC,aAAD,C,UAaHC,QAAQ;AAAA;AAAA,qC,UAGRA,QAAQ,CAACJ,MAAD,C,UAERI,QAAQ,CAACH,KAAD,C,sCAlBb,MACaO,WADb,SACiCT,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAoB/BU,UApB+B,GAoBL,OApBK;AAAA;;AAIjB,eAARC,QAAQ,GAAiB;AACnC,cAAG,CAACF,WAAW,CAACG,QAAhB,EAAyB;AACrBH,YAAAA,WAAW,CAACG,QAAZ,GAAuB,IAAIH,WAAJ,EAAvB;AACH;;AAED,iBAAOA,WAAW,CAACG,QAAnB;AACH;;AAYDC,QAAAA,KAAK,GAAG;AACJJ,UAAAA,WAAW,CAACG,QAAZ,GAAuB,IAAvB;AACA,eAAKE,YAAL,CAAkBC,IAAlB,CAAuBC,EAAvB,CAA0Bf,MAAM,CAACgB,SAAP,CAAiBC,KAA3C,EAAkD,KAAKC,gBAAvD,EAAyE,IAAzE;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,eAAKC,WAAL,CAAiBC,QAAjB;AACH,SA7BsC,CA+BvC;;;AACQJ,QAAAA,gBAAgB,GAAE;AACtB,cAAG,KAAKT,UAAL,KAAoB,OAAvB,EAA+B;AAC3B,iBAAKA,UAAL,GAAkB,MAAlB;AACA,iBAAKc,WAAL,CAAiBC,MAAjB,GAA0B,MAA1B;AACH,WAHD,MAIK,IAAG,KAAKf,UAAL,KAAoB,MAAvB,EAA8B;AAC/B,iBAAKA,UAAL,GAAkB,OAAlB;AACA,iBAAKc,WAAL,CAAiBC,MAAjB,GAA0B,MAA1B;AACH;AACJ;;AAEMC,QAAAA,aAAa,GAAe;AAC/B,iBAAO,KAAKhB,UAAZ;AACH;;AA7CsC,O,UAExBE,Q;;;;;iBAWa,I;;;;;;;iBAGI,I;;;;;;;iBAEF,I","sourcesContent":["import { _decorator, Component, Node, Button, Label, Game } from 'cc';\nimport { QuizManager } from './QuizManager';\nconst { ccclass, property } = _decorator;\n\nconst ClientMode = {\n    Liver : 'Liver',\n    User : 'User',\n} as const;\n\nexport type ClientMode = typeof ClientMode[keyof typeof ClientMode];\n\n@ccclass('GameManager')\nexport class GameManager extends Component {\n\n    private static instance : GameManager;\n    \n    public static Instance() : GameManager {\n        if(!GameManager.instance){\n            GameManager.instance = new GameManager();\n        }\n\n        return GameManager.instance;\n    }\n\n    @property(QuizManager)\n    quizManager : QuizManager = null;\n\n    @property(Button)\n    private clientButton : Button = null;\n    @property(Label)\n    private clientLabel : Label = null;\n\n    private clientMode : ClientMode = 'Liver';\n\n    start() {\n        GameManager.instance = this;\n        this.clientButton.node.on(Button.EventType.CLICK, this.ChangeClientMode, this);\n    }\n\n    update(deltaTime: number) {\n        this.quizManager.OnUpdate();\n    }\n\n    // ライバーとユーザーの切り替え(デバッグ用)\n    private ChangeClientMode(){\n        if(this.clientMode === 'Liver'){\n            this.clientMode = 'User';\n            this.clientLabel.string = \"ユーザー\";\n        }\n        else if(this.clientMode === 'User'){\n            this.clientMode = 'Liver';\n            this.clientLabel.string = \"ライバー\";\n        }\n    }\n\n    public GetClientMode() : ClientMode{\n        return this.clientMode;\n    }\n}\n\n"]}