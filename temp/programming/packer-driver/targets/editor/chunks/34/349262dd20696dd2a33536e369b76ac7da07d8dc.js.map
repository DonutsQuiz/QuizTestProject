{"version":3,"sources":["file:///Users/takeda.naomichi/Desktop/QuizTestProject/assets/Script/Game/Modal/ChoicesModal.ts"],"names":["_decorator","Component","Node","Button","Label","Sprite","GameManager","QuizModalManager","ccclass","property","ChoicesModal","choiceNumber","debugClientMode","start","buttonList","node","on","EventType","CLICK","Choice","update","deltaTime","DebugModalUpdate","index","Instance","ChangeModal","GetResultModal","SetCoinLabel","SetChoices","text","sprite","labelList","string","spriteList","spriteFrame","GetChoics","SetQuestion","sent","questionLabel","GetClientMode","liverNode","active","userNode","Array"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Button, Label, SpriteFrame, Sprite } from 'cc';\nimport { ClientMode, GameManager } from '../Manager/GameManager';\nimport { QuizModalManager } from '../Manager/QuizModalManager';\nimport { ResultModal } from './ResultModal';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ChoicesModal')\nexport class ChoicesModal extends Component {\n\n    @property(Node)\n    private liverNode : Node = null;\n    @property(Node)\n    private userNode : Node = null;\n    @property(Button)\n    buttonList : Array<Button> = new Array<Button>();\n    @property(Label)\n    labelList : Array<Label> = new Array<Label>();\n    @property(Sprite)\n    spriteList : Array<Sprite> = new Array<Sprite>();\n    @property(Label)\n    private oddsLabelList : Array<Label> = new Array<Label>();\n    @property(Label)\n    private betLabelList : Array<Label> = new Array<Label>();\n    @property(Label)\n    questionLabel : Label = null;\n\n    choiceNumber : number = -1;\n    private debugClientMode : ClientMode = 'Liver';\n\n    start() {\n        this.buttonList[0].node.on(Button.EventType.CLICK, function(){this.Choice(0);}, this);\n        this.buttonList[1].node.on(Button.EventType.CLICK, function(){this.Choice(1);}, this);\n        this.buttonList[2].node.on(Button.EventType.CLICK, function(){this.Choice(2);}, this);\n        this.buttonList[3].node.on(Button.EventType.CLICK, function(){this.Choice(3);}, this);\n        this.buttonList[4].node.on(Button.EventType.CLICK, function(){this.Choice(4);}, this);\n        this.buttonList[5].node.on(Button.EventType.CLICK, function(){this.Choice(5);}, this);\n    }\n\n    update(deltaTime: number) {\n        this.DebugModalUpdate();\n    }\n\n    // クリックした時\n    private Choice(index : number) {\n        this.choiceNumber = index;\n        QuizModalManager.Instance().ChangeModal('Result');\n        QuizModalManager.Instance().GetResultModal().SetCoinLabel(\"400\");\n    }\n\n    // 選択肢を設定\n    public SetChoices(index : number, text : string, sprite : SpriteFrame){\n        this.labelList[index].string = text;\n        this.spriteList[index].spriteFrame = sprite;\n    }\n\n    \n    public GetChoics() : number{\n        return this.choiceNumber;\n    }\n\n    public SetQuestion(sent : string){\n        this.questionLabel.string = sent;\n    }\n\n    private DebugModalUpdate(){\n        if(GameManager.Instance().GetClientMode() != this.debugClientMode){\n\n            if(GameManager.Instance().GetClientMode() === 'Liver'){\n                this.liverNode.active = true;\n                this.userNode.active = false;\n                this.debugClientMode = 'Liver';\n            }\n            else{\n                this.liverNode.active = false;\n                this.userNode.active = true;\n                this.debugClientMode = 'User';\n            }\n        }\n\n    }\n}\n\n"]}