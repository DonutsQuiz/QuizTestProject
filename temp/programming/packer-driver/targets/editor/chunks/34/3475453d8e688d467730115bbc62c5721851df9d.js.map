{"version":3,"sources":["file:///Users/takeda.naomichi/Desktop/QuizTestProject/assets/Script/Game/Quiz/GestureQuiz.ts"],"names":["_decorator","math","GameManager","QuizModalManager","QuizDataBase","QuizComponent","ccclass","property","GestureQuiz","mSprite","mData","debugClientMode","start","update","deltaTime","DebugClientMode","SetQuiz","Instance","GetData","DecisionAnswer","GetQuestionModal","SetNumber","mNumber","GetClientMode","SetSentence","mSentence","SetSprite","GetChoicesModal","SetQuestion","temp","i","select","mAnswer","SetChoices","mIndex","tempdata","result","n","length","GetResultModal","SetAnswerLabel","SetAnswerSprite","Initialize","Reset","mType","count","GetDataList","randomRangeInt"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, SpriteFrame, math, SphereColliderComponent } from 'cc';\nimport { ClientMode, GameManager } from '../Manager/GameManager';\nimport { QuizModalManager } from '../Manager/QuizModalManager';\nimport { GestureData } from './Data/QuizData';\nimport { QuizDataBase } from './Data/QuizDataBase';\nimport { QuizComponent } from './QuizComponent';\nconst { ccclass, property } = _decorator;\n\n\n\n@ccclass('GestureQuiz')\nexport class GestureQuiz extends QuizComponent {\n\n    mSprite : SpriteFrame;  // 問題の画像\n    mData : GestureData;\n\n    private debugClientMode : ClientMode = 'Liver';\n\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n        this.DebugClientMode();\n    }\n\n    public SetQuiz(){\n        // 問題文\n        this.mData = QuizDataBase.Instance().GetData<GestureData>('Gesture', this.DecisionAnswer());\n        QuizModalManager.Instance().GetQuestionModal().SetNumber(++this.mNumber);\n        if(GameManager.Instance().GetClientMode() === 'Liver'){\n            QuizModalManager.Instance().GetQuestionModal().SetSentence(this.mSentence = \"この顔を演じてください\");\n        }\n        else{\n            QuizModalManager.Instance().GetQuestionModal().SetSentence(this.mSentence = \"どの顔文字を演じているでしょう\");\n        }\n        QuizModalManager.Instance().GetQuestionModal().SetSprite(this.mSprite = this.mData.mSprite);\n\n\n\n        // 選択肢\n        QuizModalManager.Instance().GetChoicesModal().SetQuestion(\"どの顔を演じている?\");\n        var temp : Array<number> = [-1,-1,-1,-1,-1,-1];\n        for(var i : number = 0; i < 6; i++){\n            var select : string;\n            if(i === 0){select = \"A.\";}\n            else if(i === 1){select = \"B.\";}\n            else if(i === 2){select = \"C.\";}\n            else if(i === 3){select = \"D.\";}\n            else if(i === 4){select = \"E.\";}\n            else if(i === 5){select = \"F.\";}\n\n            if(i === this.mData.mAnswer){\n                QuizModalManager.Instance().GetChoicesModal().SetChoices(i, select, this.mData.mSprite);\n                temp[i] = this.mData.mIndex;\n            }\n            else{\n                var tempdata : GestureData = null\n                do {\n                    tempdata = QuizDataBase.Instance().GetData<GestureData>('Gesture', this.DecisionAnswer());\n                    var result : Boolean = false;\n                    for(var n = 0; n < temp.length; n++){\n                        if(tempdata.mIndex === this.mData.mIndex || temp[n] === tempdata.mIndex){\n                            result = false;\n                            break;\n                        }\n\n                        if(temp[n] === -1){\n                            temp[n] = tempdata.mIndex;\n                            result = true;\n                            break;\n                        }\n                    }\n                } while (!result);\n\n                QuizModalManager.Instance().GetChoicesModal().SetChoices(i, select, tempdata.mSprite);\n            }\n        }\n\n        // 結果\n        QuizModalManager.Instance().GetResultModal().SetAnswerLabel(this.mData.mAnswer ,\"\");\n        QuizModalManager.Instance().GetResultModal().SetAnswerSprite(this.mSprite);\n    }\n\n    public Initialize(){\n        super.Reset();\n        QuizModalManager.Instance().GetQuestionModal().Initialize(this.mType = 'Gesture');\n        this.mSprite = null;  // 問題の画像\n        this.mData = null;\n    }\n\n    private DecisionAnswer() : number{\n        var count = QuizDataBase.Instance().GetDataList<GestureData>('Gesture').length;\n        return math.randomRangeInt(0, count);\n    }\n\n    public GetData() : GestureData{\n        return this.mData;\n    }\n\n    private DebugClientMode(){\n        if(GameManager.Instance().GetClientMode() != this.debugClientMode){\n            if(GameManager.Instance().GetClientMode() === 'Liver'){\n                this.mSentence = \"この顔を演じてください\";\n                this.debugClientMode = 'Liver';\n            }\n            else{\n                this.mSentence = \"どの顔を演じているでしょう\";\n                this.debugClientMode = 'User';\n            }\n            QuizModalManager.Instance().GetQuestionModal().SetSentence(this.mSentence);\n        }\n    }\n}\n\n"]}