{"version":3,"sources":["file:///Users/takeda.naomichi/Desktop/QuizTestProject/assets/Script/Game/Manager/QuizModalManager.ts"],"names":["_decorator","Component","Node","instantiate","Prefab","Button","ChoicesModal","OverallResultModal","QuestionModal","ResultModal","WaitModal","ccclass","property","ModalType","None","Question","Choices","Result","Overall","Wait","QuizModalManager","question","choices","result","overall","wait","Instance","instance","start","temp","questionPrefab","setParent","canvas","active","getComponent","choicesPrefab","resultPrefab","overallPrefab","waitPrefab","update","deltaTime","OnUpdate","ChangeModal","nextType","node","GetQuestionModal","GetChoicesModal","GetResultModal","GetOverallResultModal"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;AAAgBC,MAAAA,M,OAAAA,M;;AAC1DC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,kB,iBAAAA,kB;;AACAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;AAExBa,MAAAA,S,GAAY;AACdC,QAAAA,IAAI,EAAO,MADG;AAEdC,QAAAA,QAAQ,EAAG,UAFG;AAGdC,QAAAA,OAAO,EAAI,SAHG;AAIdC,QAAAA,MAAM,EAAK,QAJG;AAKdC,QAAAA,OAAO,EAAI,SALG;AAMdC,QAAAA,IAAI,EAAO;AANG,O;;kCAYLC,gB,WADZT,OAAO,CAAC,kBAAD,C,UAaHC,QAAQ,CAACV,IAAD,C,UAERU,QAAQ,CAACR,MAAD,C,UAERQ,QAAQ,CAACR,MAAD,C,UAERQ,QAAQ,CAACR,MAAD,C,UAERQ,QAAQ,CAACR,MAAD,C,UAERQ,QAAQ,CAACR,MAAD,C,UAERQ,QAAQ,CAACP,MAAD,C,sCAzBb,MACae,gBADb,SACsCnB,SADtC,CACgD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eA2BpCoB,QA3BoC,GA2BT,IA3BS;AAAA,eA4BpCC,OA5BoC,GA4BX,IA5BW;AAAA,eA6BpCC,MA7BoC,GA6Bb,IA7Ba;AAAA,eA8BpCC,OA9BoC,GA8BL,IA9BK;AAAA,eA+BpCC,IA/BoC,GA+BjB,IA/BiB;AAAA;;AAItB,eAARC,QAAQ,GAAsB;AACxC,cAAG,CAACN,gBAAgB,CAACO,QAArB,EAA8B;AAC1BP,YAAAA,gBAAgB,CAACO,QAAjB,GAA4B,IAAIP,gBAAJ,EAA5B;AACH;;AAED,iBAAOA,gBAAgB,CAACO,QAAxB;AACH;;AAuBDC,QAAAA,KAAK,GAAG;AACJR,UAAAA,gBAAgB,CAACO,QAAjB,GAA4B,IAA5B;AAEA,cAAIE,IAAI,GAAG1B,WAAW,CAAC,KAAK2B,cAAN,CAAtB;AACAD,UAAAA,IAAI,CAACE,SAAL,CAAe,KAAKC,MAApB;AACAH,UAAAA,IAAI,CAACI,MAAL,GAAc,KAAd;AACA,eAAKZ,QAAL,GAAgBQ,IAAI,CAACK,YAAL;AAAA;AAAA,6CAAhB;AAEAL,UAAAA,IAAI,GAAG1B,WAAW,CAAC,KAAKgC,aAAN,CAAlB;AACAN,UAAAA,IAAI,CAACE,SAAL,CAAe,KAAKC,MAApB;AACAH,UAAAA,IAAI,CAACI,MAAL,GAAc,KAAd;AACA,eAAKX,OAAL,GAAeO,IAAI,CAACK,YAAL;AAAA;AAAA,2CAAf;AAEAL,UAAAA,IAAI,GAAG1B,WAAW,CAAC,KAAKiC,YAAN,CAAlB;AACAP,UAAAA,IAAI,CAACE,SAAL,CAAe,KAAKC,MAApB;AACAH,UAAAA,IAAI,CAACI,MAAL,GAAc,KAAd;AACA,eAAKV,MAAL,GAAcM,IAAI,CAACK,YAAL;AAAA;AAAA,yCAAd;AAEAL,UAAAA,IAAI,GAAG1B,WAAW,CAAC,KAAKkC,aAAN,CAAlB;AACAR,UAAAA,IAAI,CAACE,SAAL,CAAe,KAAKC,MAApB;AACAH,UAAAA,IAAI,CAACI,MAAL,GAAc,KAAd;AACA,eAAKT,OAAL,GAAeK,IAAI,CAACK,YAAL;AAAA;AAAA,uDAAf;AAEAL,UAAAA,IAAI,GAAG1B,WAAW,CAAC,KAAKmC,UAAN,CAAlB;AACAT,UAAAA,IAAI,CAACE,SAAL,CAAe,KAAKC,MAApB;AACAH,UAAAA,IAAI,CAACI,MAAL,GAAc,KAAd;AACA,eAAKR,IAAL,GAAYI,IAAI,CAACK,YAAL;AAAA;AAAA,qCAAZ;AACH;;AAEDK,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEMC,QAAAA,QAAQ,CAACD,SAAD,EAAoB,CAElC;;AAEME,QAAAA,WAAW,CAACC,QAAD,EAAsB;AACpC,cAAGA,QAAQ,KAAK,UAAhB,EAA2B;AACvB,iBAAKpB,MAAL,CAAYqB,IAAZ,CAAiBX,MAAjB,GAA0B,KAA1B;AACA,iBAAKT,OAAL,CAAaoB,IAAb,CAAkBX,MAAlB,GAA2B,KAA3B;AACA,iBAAKZ,QAAL,CAAcuB,IAAd,CAAmBX,MAAnB,GAA4B,IAA5B;AACH,WAJD,MAKK,IAAGU,QAAQ,KAAK,SAAhB,EAA0B;AAC3B,iBAAKtB,QAAL,CAAcuB,IAAd,CAAmBX,MAAnB,GAA4B,KAA5B;AACA,iBAAKX,OAAL,CAAasB,IAAb,CAAkBX,MAAlB,GAA2B,IAA3B;AACH,WAHI,MAIA,IAAGU,QAAQ,KAAK,QAAhB,EAAyB;AAC1B,iBAAKrB,OAAL,CAAasB,IAAb,CAAkBX,MAAlB,GAA2B,KAA3B;AACA,iBAAKV,MAAL,CAAYqB,IAAZ,CAAiBX,MAAjB,GAA0B,IAA1B;AACH,WAHI,MAIA,IAAGU,QAAQ,KAAK,SAAhB,EAA0B;AAC3B,iBAAKtB,QAAL,CAAcuB,IAAd,CAAmBX,MAAnB,GAA4B,KAA5B;AACA,iBAAKX,OAAL,CAAasB,IAAb,CAAkBX,MAAlB,GAA2B,KAA3B;AACA,iBAAKT,OAAL,CAAaoB,IAAb,CAAkBX,MAAlB,GAA2B,IAA3B;AACH;AACJ;;AAEMY,QAAAA,gBAAgB,GAAkB;AACrC,iBAAO,KAAKxB,QAAZ;AACH;;AACMyB,QAAAA,eAAe,GAAiB;AACnC,iBAAO,KAAKxB,OAAZ;AACH;;AACMyB,QAAAA,cAAc,GAAgB;AACjC,iBAAO,KAAKxB,MAAZ;AACH;;AACMyB,QAAAA,qBAAqB,GAAuB;AAC/C,iBAAO,KAAKxB,OAAZ;AACH;;AAtG2C,O,UAE7BG,Q;;;;;iBAWC,I;;;;;;;iBAEkB,I;;;;;;;iBAED,I;;;;;;;iBAED,I;;;;;;;iBAEC,I;;;;;;;iBAEH,I;;;;;;;iBAEE,I","sourcesContent":["import { _decorator, Component, Node, instantiate, Prefab, Canvas, Button, Label } from 'cc';\nimport { ChoicesModal } from '../Modal/ChoicesModal';\nimport { OverallResultModal } from '../Modal/OverallResultModal';\nimport { QuestionModal } from '../Modal/QuestionModal';\nimport { ResultModal } from '../Modal/ResultModal';\nimport { WaitModal } from '../Modal/User/WaitModal';\nconst { ccclass, property } = _decorator;\n\nconst ModalType = {\n    None     : 'None',\n    Question : 'Question',\n    Choices  : 'Choices',\n    Result   : 'Result',\n    Overall  : 'Overall',\n    Wait     : 'Wait',\n} as const;\n\nexport type ModalType = typeof ModalType[keyof typeof ModalType];\n\n@ccclass('QuizModalManager')\nexport class QuizModalManager extends Component {\n\n    private static instance : QuizModalManager;\n    \n    public static Instance() : QuizModalManager {\n        if(!QuizModalManager.instance){\n            QuizModalManager.instance = new QuizModalManager();\n        }\n\n        return QuizModalManager.instance;\n    }\n\n    @property(Node)\n    canvas : Node = null;\n    @property(Prefab)\n    private questionPrefab : Prefab = null;\n    @property(Prefab)\n    private choicesPrefab : Prefab = null;\n    @property(Prefab)\n    private resultPrefab : Prefab = null;\n    @property(Prefab)\n    private overallPrefab : Prefab = null;\n    @property(Prefab)\n    private waitPrefab : Prefab = null;\n    @property(Button)\n    private clientButton : Button = null;\n\n    private question : QuestionModal = null;\n    private choices : ChoicesModal = null;\n    private result : ResultModal = null;\n    private overall : OverallResultModal = null;\n    private wait : WaitModal = null;\n\n    start() {\n        QuizModalManager.instance = this;\n\n        var temp = instantiate(this.questionPrefab);\n        temp.setParent(this.canvas);\n        temp.active = false;\n        this.question = temp.getComponent(QuestionModal);\n\n        temp = instantiate(this.choicesPrefab);\n        temp.setParent(this.canvas);\n        temp.active = false;\n        this.choices = temp.getComponent(ChoicesModal);\n\n        temp = instantiate(this.resultPrefab);\n        temp.setParent(this.canvas);\n        temp.active = false;\n        this.result = temp.getComponent(ResultModal);\n\n        temp = instantiate(this.overallPrefab);\n        temp.setParent(this.canvas);\n        temp.active = false;\n        this.overall = temp.getComponent(OverallResultModal);\n\n        temp = instantiate(this.waitPrefab);\n        temp.setParent(this.canvas);\n        temp.active = false;\n        this.wait = temp.getComponent(WaitModal);\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    public OnUpdate(deltaTime : number){\n        \n    }\n\n    public ChangeModal(nextType : ModalType){\n        if(nextType === 'Question'){\n            this.result.node.active = false;\n            this.overall.node.active = false;\n            this.question.node.active = true;\n        }\n        else if(nextType === 'Choices'){\n            this.question.node.active = false;\n            this.choices.node.active = true;\n        }\n        else if(nextType === 'Result'){\n            this.choices.node.active = false;\n            this.result.node.active = true;\n        }\n        else if(nextType === 'Overall'){\n            this.question.node.active = false;\n            this.choices.node.active = false;\n            this.overall.node.active = true;\n        }\n    }\n\n    public GetQuestionModal() : QuestionModal{\n        return this.question;\n    }\n    public GetChoicesModal() : ChoicesModal{\n        return this.choices;\n    }\n    public GetResultModal() : ResultModal{\n        return this.result;\n    }\n    public GetOverallResultModal() : OverallResultModal{\n        return this.overall;\n    }\n}\n\n"]}