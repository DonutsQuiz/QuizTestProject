{"version":3,"sources":["file:///Users/takeda.naomichi/TestQuizSecond/assets/Script/Game/Quiz/GestureQuiz.ts"],"names":["_decorator","math","QuizModalManager","QuizDataBase","QuizComponent","ccclass","property","GestureQuiz","mSprite","mData","start","update","deltaTime","SetQuiz","Instance","GetGestureDataBase","GetData","DecisionAnswer","GetQuestionModal","SetNumber","mNumber","SetSentence","mSentence","SetSprite","temp","i","select","mAnswer","GetChoicesModal","SetChoices","mIndex","tempdata","dataList","result","n","length","GetResultModal","SetAnswerLabel","SetAnswerSprite","Initialize","Reset","mType","randomRangeInt","GetAllData"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, SpriteFrame, math, SphereColliderComponent } from 'cc';\nimport { QuizModalManager } from '../Manager/QuizModalManager';\nimport { GestureData } from './Data/GestureData';\nimport { GestureDataBase } from './Data/GestureDataBase';\nimport { QuizDataBase } from './Data/QuizDataBase';\nimport { QuizComponent, QuizData } from './QuizComponent';\nconst { ccclass, property } = _decorator;\n\n\n\n@ccclass('GestureQuiz')\nexport class GestureQuiz extends QuizComponent {\n\n    mSprite : SpriteFrame;  // 問題の画像\n    mData : GestureData;\n\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    public SetQuiz(){\n        // 問題文\n        this.mData = QuizDataBase.Instance().GetGestureDataBase().GetData(this.DecisionAnswer());\n        QuizModalManager.Instance().GetQuestionModal().SetNumber(++this.mNumber);\n        QuizModalManager.Instance().GetQuestionModal().SetSentence(this.mSentence = \"この顔を演じてください\");\n        QuizModalManager.Instance().GetQuestionModal().SetSprite(this.mSprite = this.mData.mSprite);\n\n\n        // 選択肢\n        var temp : Array<number> = [-1,-1,-1,-1,-1,-1];\n        for(var i : number = 0; i < 6; i++){\n            var select : string;\n            if(i === 0){select = \"A.\";}\n            else if(i === 1){select = \"B.\";}\n            else if(i === 2){select = \"C.\";}\n            else if(i === 3){select = \"D.\";}\n            else if(i === 4){select = \"E.\";}\n            else if(i === 5){select = \"F.\";}\n\n            if(i === this.mData.mAnswer){\n                QuizModalManager.Instance().GetChoicesModal().SetChoices(i, select, this.mData.mSprite);\n                temp[i] = this.mData.mIndex;\n            }\n            else{\n                var tempdata : GestureData = null\n                do {\n                    tempdata = this.dataList.GetData(this.DecisionAnswer());\n                    var result : Boolean = false;\n                    for(var n = 0; n < temp.length; n++){\n                        if(tempdata.mIndex === this.mData.mIndex || temp[n] === tempdata.mIndex){\n                            result = false;\n                            break;\n                        }\n\n                        if(temp[n] === -1){\n                            temp[n] = tempdata.mIndex;\n                            result = true;\n                            break;\n                        }\n                    }\n                } while (!result);\n\n                QuizModalManager.Instance().GetChoicesModal().SetChoices(i, select, tempdata.mSprite);\n            }\n        }\n\n        // 結果\n        QuizModalManager.Instance().GetResultModal().SetAnswerLabel(this.mData.mAnswer ,\"\");\n        QuizModalManager.Instance().GetResultModal().SetAnswerSprite(this.mSprite);\n    }\n\n    public Initialize(){\n        super.Reset();\n        QuizModalManager.Instance().GetQuestionModal().Initialize(this.mType = 'Gesture');\n        this.mSprite = null;  // 問題の画像\n        this.mData = null;\n    }\n\n    private DecisionAnswer() : number{\n        return math.randomRangeInt(0,this.dataList.GetAllData().length);\n    }\n}\n\n"]}