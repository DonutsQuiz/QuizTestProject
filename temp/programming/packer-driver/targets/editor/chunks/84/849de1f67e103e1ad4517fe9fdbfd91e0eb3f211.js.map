{"version":3,"sources":["file:///Users/takeda.naomichi/Desktop/QuizTestProject/assets/Script/Game/Modal/BetModal.ts"],"names":["_decorator","Component","Node","Slider","Button","Label","GameManager","ccclass","property","BetModal","coins","betValue","criteriaPoint","sliderMax","isDecide","start","Instance","GetPlayerInfo","coinsLabel","string","toString","decideButton","node","on","EventType","CLICK","self","active","closeButton","betButtonList","betSlider","progress","update","deltaTime","BetSlider","Math","round","valueLabel","SetIsDecide","dec","GetIsDecide","Array"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Slider, Button, Label, labelAssembler, convertUtils, math, isUnicodeCJK } from 'cc';\nimport { GameManager } from '../Manager/GameManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BetModal')\nexport class BetModal extends Component {\n\n    @property(Node)\n    private self : Node = null;\n    @property(Slider)\n    private betSlider : Slider = null;\n    @property(Button)\n    private betButtonList : Array<Button> = new Array<Button>();\n    @property(Button)\n    private decideButton : Button = null;\n    @property(Label)\n    private valueLabel : Label = null;\n    @property(Button)\n    private closeButton : Button = null;\n    @property(Label)\n    private coinsLabel : Label = null;\n\n\n    private coins : number = 20000; // 所持コイン\n    private betValue : number = 0;\n    private criteriaPoint : number = 0;\n    private sliderMax : number = 0;\n    private isDecide : boolean = false;\n\n    start() {\n        this.coins = GameManager.Instance().GetPlayerInfo().coins;\n        this.coinsLabel.string = this.coins.toString();\n        this.sliderMax = this.coins / 10;\n        this.criteriaPoint = 1.0 / (this.coins / 10);\n        this.decideButton.node.on(Button.EventType.CLICK, function(){this.self.active = false; this.isDecide = true;}, this);\n        this.closeButton.node.on(Button.EventType.CLICK, function(){this.self.active = false;}, this);\n        this.betButtonList[0].node.on(Button.EventType.CLICK, function(){this.betSlider.progress += this.criteriaPoint;}, this);\n        this.betButtonList[1].node.on(Button.EventType.CLICK, function(){this.betSlider.progress += this.criteriaPoint * 10;}, this);\n        this.betButtonList[2].node.on(Button.EventType.CLICK, function(){this.betSlider.progress += this.criteriaPoint * 100;}, this);\n        this.betButtonList[3].node.on(Button.EventType.CLICK, function(){this.betSlider.progress  = 1.0;}, this);\n    }\n\n    update(deltaTime: number) {\n        this.BetSlider();\n    }\n\n    private BetSlider(){\n        if(this.betSlider.progress >= 1.0){\n            this.betSlider.progress = 1.0;\n        }\n        this.betValue = Math.round(this.sliderMax * this.betSlider.progress) * 10;\n        this.valueLabel.string = this.betValue.toString();\n    }\n\n\n\n    public SetIsDecide(dec : boolean){\n        this.isDecide = dec;\n    }\n\n    public GetIsDecide() :boolean {\n        return this.isDecide;\n    }\n}\n\n"]}