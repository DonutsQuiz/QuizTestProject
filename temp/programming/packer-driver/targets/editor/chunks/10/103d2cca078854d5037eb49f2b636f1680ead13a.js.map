{"version":3,"sources":["file:///Users/takeda.naomichi/Desktop/QuizTestProject/assets/Script/Game/Modal/ChoicesModal.ts"],"names":["_decorator","Component","Node","Button","Label","Sprite","Vec3","ChipControll","Timer","GameManager","QuizManager","QuizModalManager","BetModal","ResultModal","ccclass","property","ChoicesModal","choiceNumber","tempNumber","debugClientMode","isNext","start","buttonList","node","on","EventType","CLICK","Choice","nextButton","Next","resultButton","ShowResult","update","deltaTime","DebugModalUpdate","timer","Display","i","Instance","GetChoiceMax","oddsLabelList","string","GetGameInfo","odds","toString","betLabelList","totalBet","GetIsFinish","active","betModal","GetIsEnd","DontClickButton","GetIsDecide","DecideChoice","index","SetChoices","text","sprite","labelList","spriteList","spriteFrame","GetChoics","SetQuestion","sent","questionLabel","Initialize","SetTimeLimit","thinkTime","qSentence","resultModal","liverAnswerFrameSprite","position","qCorNumber","GetClientMode","liverNode","userNode","userAnswerFrameSprite","coinsLabel","coins","chipAnim","Play","SetIsDecide","ChangeModal","GetResultModal","SetCoinLabel","is","buttons","isResult","Array"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Button, Label, SpriteFrame, Sprite, Vec3 } from 'cc';\nimport { ChipControll } from '../../Chip/ChipControll';\nimport { Timer } from '../../UI/Timer';\nimport { ClientMode, GameManager } from '../Manager/GameManager';\nimport { QuizManager } from '../Manager/QuizManager';\nimport { QuizModalManager } from '../Manager/QuizModalManager';\nimport { BetModal } from './BetModal';\nimport { ResultModal } from './ResultModal';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ChoicesModal')\nexport class ChoicesModal extends Component {\n\n    @property(Node) // ライバー側\n    private liverNode : Node = null;\n    @property(Node) // ユーザー側\n    private userNode : Node = null;\n    @property(Button) // 選択肢（ボタン）\n    buttonList : Array<Button> = new Array<Button>();\n    @property(Node) // 選択肢（枠）\n    frameList : Array<Node> = new Array<Node>();\n    @property(Label) // 選択肢（文字）\n    labelList : Array<Label> = new Array<Label>();\n    @property(Sprite)// 選択肢（画像）\n    spriteList : Array<Sprite> = new Array<Sprite>();\n    @property(Label)// オッズ\n    private oddsLabelList : Array<Label> = new Array<Label>();\n    @property(Label)// 総ベット量\n    private betLabelList : Array<Label> = new Array<Label>();\n    @property(Label)// 問題文\n    private questionLabel : Label = null;\n    @property(Label)// 所持コイン\n    private coinsLabel : Label = null;\n    @property(BetModal)// ベットモーダル\n    private betModal : BetModal = null; \n    @property(Button)// 次に進むボタン\n    private nextButton : Button = null;\n    @property(Button)// 結果表示ボタン\n    private resultButton : Button = null;\n    @property(Node)// 答えの枠\n    private liverAnswerFrameSprite : Node = null;\n    @property(Node)// 選択した枠\n    private userAnswerFrameSprite : Node = null;\n\n    @property(ResultModal) // リザルトモーダル\n    private resultModal : ResultModal = null;\n\n    @property(Timer)\n    timer : Timer = null;\n    @property(ChipControll)\n    chipAnim : ChipControll = null;\n\n    choiceNumber : number = -1;\n    private tempNumber : number = 0;\n    private debugClientMode : ClientMode = 'Liver';\n\n    isNext : boolean = false;\n\n    start() {\n        this.buttonList[0].node.on(Button.EventType.CLICK, function(){this.Choice(0);}, this);\n        this.buttonList[1].node.on(Button.EventType.CLICK, function(){this.Choice(1);}, this);\n        this.buttonList[2].node.on(Button.EventType.CLICK, function(){this.Choice(2);}, this);\n        this.buttonList[3].node.on(Button.EventType.CLICK, function(){this.Choice(3);}, this);\n        this.nextButton.node.on( Button.EventType.CLICK, this.Next, this);\n        this.resultButton.node.on( Button.EventType.CLICK, this.ShowResult, this);\n    }\n\n    update(deltaTime: number) {\n        this.DebugModalUpdate();\n\n        this.timer.Display();\n\n        for(var i = 0; i < QuizManager.Instance().GetChoiceMax(); i++){\n            this.oddsLabelList[i].string = \"X\" + GameManager.Instance().GetGameInfo().odds[i].toString();\n            this.betLabelList[i].string = GameManager.Instance().GetGameInfo().totalBet[i].toString();\n        }\n\n        // 時間切れの処理\n        if(this.timer.GetIsFinish()){\n            this.resultButton.node.active = true;\n            for(const odds of this.oddsLabelList){\n                odds.node.active = true;\n            }\n        }\n\n        // ベットモーダルが出ている時は選択肢を押せないようにする\n        if(this.betModal.node.active || this.timer.GetIsEnd()){\n            this.DontClickButton(false);\n        }\n        else{\n            this.DontClickButton(true);\n        }\n\n        if(this.betModal.GetIsDecide()){\n            this.DecideChoice();\n        }\n    }\n\n    // クリックした時\n    private Choice(index : number) {\n        this.betModal.node.active = true;    // ベットモーダルを表示\n        this.tempNumber = index;      // 選択した番号\n    }\n\n    // 選択肢を設定\n    public SetChoices(index : number, text : string, sprite : SpriteFrame){\n        this.labelList[index].string = text;\n        this.spriteList[index].spriteFrame = sprite;\n    }\n\n    \n    public GetChoics() : number{\n        return this.choiceNumber;\n    }\n\n    public SetQuestion(sent : string){\n        this.questionLabel.string = sent;\n    }\n\n    public Initialize(){\n        this.timer.SetTimeLimit(GameManager.Instance().GetGameInfo().thinkTime);   // タイマーのセット\n        this.questionLabel.string = GameManager.Instance().GetGameInfo().qSentence;\n        this.betModal.node.active = false;\n        this.resultModal.node.active = false;\n        this.liverAnswerFrameSprite.position = new Vec3(this.buttonList[GameManager.Instance().GetGameInfo().qCorNumber].node.position);\n\n        if(GameManager.Instance().GetClientMode() === 'Liver'){\n            this.liverNode.active = true;\n            this.userNode.active = false;\n            for(const odds of this.oddsLabelList){\n                odds.node.active = true;\n            }\n            this.liverAnswerFrameSprite.active = true;\n            this.nextButton.node.active = false;\n            this.resultButton.node.active = false;\n            this.debugClientMode = 'Liver';\n\n        }\n        else{\n            this.liverNode.active = false;\n            this.userNode.active = true;\n            for(const odds of this.oddsLabelList){\n                odds.node.active = false;\n            }\n            if(this.resultModal.node.active){\n                this.liverAnswerFrameSprite.active = true;\n            }\n            else{\n                this.liverAnswerFrameSprite.active = false;\n            }\n            this.userAnswerFrameSprite.active = false;\n            this.coinsLabel.string = GameManager.Instance().GetGameInfo().coins.toString();\n            this.debugClientMode = 'User';\n        }\n    }\n\n    private DecideChoice(){\n        this.choiceNumber = this.tempNumber;\n        this.userAnswerFrameSprite.active = true;\n        this.userAnswerFrameSprite.position = new Vec3(this.buttonList[this.choiceNumber].node.position);\n        this.chipAnim.Play();\n    }\n\n    // 正解表示\n    private ShowResult(){\n        this.resultButton.node.active = false;\n        this.nextButton.node.active = true;\n        this.resultModal.node.active = true;\n        this.liverAnswerFrameSprite.active = true;\n    }\n\n    private Next(){\n        this.isNext = true;\n        this.resultModal.node.active = false;\n        this.betModal.SetIsDecide(false);\n        QuizModalManager.Instance().ChangeModal('Question');\n        QuizModalManager.Instance().GetResultModal().SetCoinLabel(\"400\");\n    }\n\n    // ボタンを押せないようにする\n    private DontClickButton(is : boolean){\n        for(const buttons of this.buttonList){\n            buttons.node.active = is;\n        }\n    }\n\n    private DebugModalUpdate(){\n        if(GameManager.Instance().GetClientMode() != this.debugClientMode){\n            var isResult : boolean = false;\n            if(this.resultModal.node.active) isResult = true;\n\n            this.Initialize();\n\n            if(this.timer.GetIsEnd()){\n                this.resultButton.node.active = true;\n                for(const odds of this.oddsLabelList){\n                    odds.node.active = true;\n                }\n            }\n\n            if(isResult){\n                this.resultModal.node.active = true;\n                this.liverAnswerFrameSprite.active = true;\n            }\n        }\n    }\n\n    public GetResultModal() : ResultModal{\n        return this.resultModal;\n    }\n}\n\n"]}